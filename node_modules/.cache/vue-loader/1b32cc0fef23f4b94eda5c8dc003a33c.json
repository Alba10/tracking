{"remainingRequest":"C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\src\\App.vue","mtime":1732922067743},{"path":"C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1732361031245},{"path":"C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1732361033243},{"path":"C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1732361032138},{"path":"C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1732361030286},{"path":"C:\\Users\\Elvis\\Documents\\GitHub\\alba.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1732361032658}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmV4cGVyaW1lbnQgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICB9CiAgLm1haW5fc2NyZWVuIHsKICAgIGlzb2xhdGlvbjogaXNvbGF0ZTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiBhdXRvOwogICAgZm9udC1zaXplOiAxOHB4OwogICAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgfQogIC5kZWJ1Z1Jlc3VsdHN7CiAgICB3aWR0aDogMTAwJTsKICB9CiAgLnJlYWRpbmdUZXh0IHsKICAgIC8qIHotaW5kZXg6IDE7ICovCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBjb2xvcjogd2hpdGU7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgZm9udC13ZWlnaHQ6IDQ1MDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHBhZGRpbmctdG9wOiAyJTsKICAgIHBhZGRpbmctYm90dG9tOiAyJTsKICAgIHBhZGRpbmctbGVmdDogMTElOwogICAgcGFkZGluZy1yaWdodDogMTElOwogIH0KICBidXR0b24gewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiAwOwogICAgbGVmdDogNTAlOwogIH0KICAub3ZhbC1jdXJzb3IgewogICAgcG9zaXRpb246IGZpeGVkOwogICAgei1pbmRleDogMjsKICAgIHdpZHRoOiAxcHg7CiAgICBoZWlnaHQ6IDFweDsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTsKICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgIHBvaW50ZXItZXZlbnRzOiBub25lOwogICAgdHJhbnNpdGlvbjogd2lkdGggMC41cywgaGVpZ2h0IDAuNXM7CiAgfSAKICAub3ZhbC1jdXJzb3IuZ3Jvdy5ibGFuayB7CiAgICB3aWR0aDogODBweDsKICAgIGhlaWdodDogMTNweDsKICB9CiAgLm92YWwtY3Vyc29yLmdyb3cgewogICAgd2lkdGg6IDEwMnB4OwogICAgaGVpZ2h0OiAzOHB4OwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgYm94LXNoYWRvdzogMzBweCAwIDhweCAtNHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSwgLTMwcHggMCA4cHggLTRweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7CiAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IHNjcmVlbjsKICAgIHBvaW50ZXItZXZlbnRzOiBub25lOwogICAgdHJhbnNpdGlvbjogd2lkdGggMC41cywgaGVpZ2h0IDAuNXM7CiAgICBmaWx0ZXI6Ymx1cigzcHgpOwogIH0KICAub3ZhbC1jdXJzb3IuZ3Jvdzo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6ICIiOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiA1MCU7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICAgIHdpZHRoOiA3MCU7CiAgICBoZWlnaHQ6IDcwJTsKICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDsKICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKfQogIC5ibHVycnktbGF5ZXIgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgICBjb2xvcjogYmxhY2s7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgZm9udC13ZWlnaHQ6IDQ1MDsKICAgIHBhZGRpbmctdG9wOiAyJTsKICAgIHBhZGRpbmctYm90dG9tOiAyJTsKICAgIHBhZGRpbmctbGVmdDogMTElOwogICAgcGFkZGluZy1yaWdodDogMTElOwogIH0KCiAgKiB7CiAgICB1c2VyLXNlbGVjdDogbm9uZTsgLyogU3RhbmRhcmQgc3ludGF4ICovCiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAvKiBTYWZhcmkgKi8KICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IC8qIEZpcmVmb3ggKi8KICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqLwogICAgfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAqTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!-- Window is fixed, 102px, pointer cursor, gradual blurry effect on surrounding words. -->\r\n<!--  Comprehension questions appear afterwards in the same slide -->\r\n\r\n<template>\r\n  <Experiment title=\"Eksperiment\" translate=\"no\">\r\n    <InstructionScreen :title=\"'Mirësevini në eksperimentin për gjurmimin e mausit'\" :buttonName=\"'Filloni Eksperimentin'\">\r\n      <p>Në këtë eksperiment ju do të lexoni pjesë të shkurtra teksti dhe duhet ti përgjigjeni pyetjeve kuptimore rreth tyre. Megjithatë, teksti që do të shfaqet në ekran nuk do të jetë i dukshëm plotësisht. Në mënyrë që të shikoni tekstin duhet të lëvizni mausin mbi të. Për të zhvilluar eksperimentin ju duhet të përdorni një pajisje maus.</p>\r\n\t  <p>Ju mund të shpenzoni aq kohë sa ju duhet për ta lexuar tekstin në mënyrë që ta kuptoni. Në momentin që keni përfunduar leximin, klikoni ‘Përfundo’ për të shfaqur pyetjen rreth tekstit. Pasi të ktheni përgjigjen e pyetjes klikoni ‘Vazhdo’ për të shfaqur tekstin e rradhës.</p>\r\n\t  <p>Kohëzgjatja mesatare e eksperimentit është 16 minuta.</p>\r\n\t  <p>Kujdes: Për mbarëvajtjen e eksperimentit ju lutem tregoni vëmendje gjatë leximit të tekstit dhe përgjigjes së pyetjeve. </p>\r\n\t  <p>Faleminderit për pjesëmarrjen në eksperiment!</p>\r\n\t</InstructionScreen>\r\n\r\n    <template v-for=\"(trial, i) of trials\">\r\n      <Screen :key=\"i\" class=\"main_screen\" :progress=\"i / trials.length\">\r\n        <Slide>\r\n          <form>\r\n            <input type=\"hidden\" class=\"item_id\" :value=\"trial.item_id\">\r\n            <input type=\"hidden\" class=\"experiment_id\" :value=\"trial.experiment_id\">\r\n            <input type=\"hidden\" class=\"condition_id\" :value=\"trial.condition_id\">\r\n          </form>\r\n          <div class=\"oval-cursor\"></div>\r\n          <template>\r\n            <div v-if=\"showFirstDiv\" style=\"white-space: pre-line\" class=\"readingText\" @mousemove=\"moveCursor\" @mouseleave=\"changeBack\">\r\n              <template v-for=\"(word, index) of trial.text.split(' ')\">\r\n                <span :key=\"index\" :data-index=\"index\" >\r\n                  {{ word }}\r\n                </span>\r\n              </template>\r\n            </div>\r\n            <div class=\"blurry-layer\" style=\"white-space: pre-line; opacity: 0.3; filter: blur(3.5px); transition: all 0.3s linear 0s;\"> \r\n              {{trial.text}}\r\n            </div>\r\n          </template>\r\n          <button v-if=\"showFirstDiv && trial.question\" style= \"bottom:10%; transform: translate(-50%, -50%)\" @click=\"toggleDivs\" :disabled=\"!isCursorMoving\">\r\n          Përfundo\r\n          </button>\r\n\r\n          <div v-else-if=\"!showFirstDiv && trial.question\" style = \"position:absolute; bottom:10%; text-align: center; width: 100%; min-width: -webkit-fill-available;\" >\r\n            <template>\r\n              <form>\r\n                <!-- comprehension questions and the response options -->\r\n                <div>{{ trial.question.replace(/ ?[\"]+/g, '') }}</div>\r\n                <template v-for='(word, index) of trial.response_options'>\r\n                  <input :id=\"'opt_'+index\" type=\"radio\" :value=\"word\" name=\"opt\" v-model=\"$magpie.measurements.response\"/>{{ word }}<br/>\r\n                    <!-- <label :for=\"'opt_'+index\"> {{ word }}&nbsp</label> -->\r\n                </template>\r\n              </form>\r\n            </template>\r\n          </div>\r\n\t\t  \r\n\t\t  \r\n          <div v-else-if=\"!showFirstDiv &&!trial.question\" style = \"position:absolute; bottom:10%; text-align: center; width: 100%; min-width: -webkit-fill-available;\" >\r\n            <template>\r\n              <form>\r\n                <p>Hi</p>\r\n              </form>\r\n            </template>\r\n          </div>\r\n\t\t  \r\n\t\t  <button v-if=\"!trial.question\" style=\"transform: translate(-50%, -50%);\" @click=\"$magpie.saveAndNextScreen()\">\r\n          Vazhdo\r\n        </button>\r\n          <button v-if=\"$magpie.measurements.response \" style=\"transform: translate(-50%, -50%)\" @click=\"toggleDivs(); $magpie.saveAndNextScreen()\">\r\n            Vazhdo\r\n          </button>\r\n        </Slide>\r\n      </Screen>\r\n    </template>\r\n<Screen>\r\n  <p>1. Çfarë pajisje përdorët për të zhvilluar këtë eksperiment?</p>\r\n    <MultipleChoiceInput\r\n        :response.sync= \"$magpie.measurements.device\"\r\n        orientation=\"horizontal\"\r\n        :options=\"['Computer Mouse', 'Computer Trackpad', 'Tjetër']\" />\r\n  <br>\r\n  <br>\r\n  <p>2. Cilën dorë përdorët gjatë eksperiemntit?</p>\r\n    <MultipleChoiceInput\r\n        :response.sync= \"$magpie.measurements.hand\"\r\n        orientation=\"horizontal\"\r\n        :options=\"['Majtë', 'Djathtë', 'Të dyja']\" />\r\n  <button style= \"bottom:30%; transform: translate(-50%, -50%)\" @click=\"$magpie.saveAndNextScreen();\">Përfundo</button>\r\n</Screen>\r\n\r\n    <SubmitResultsScreen />\r\n  </Experiment>\r\n</template>\r\n\r\n<script>\r\n// Load data from csv files as javascript arrays with objects\r\nimport list1 from '../trials/test_items.tsv';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    const trials = list1; \r\n    // Create a new column in localCoherences called 'response_options'\r\n    // that concatenates the word in response_true with the two words in response_distractors\r\n    const updatedTrials = trials.map(trial => {\r\n      return {\r\n        ...trial,\r\n        response_options: _.shuffle(`${trial.response_true}|${trial.response_distractors}`.replace(/ ?[\"]+/g, \"\").split(\"|\")),\r\n      }\r\n    });\r\n    return {\r\n      isCursorMoving: false,\r\n      trials: updatedTrials,\r\n      currentIndex: null,\r\n      showFirstDiv: true,\r\n      // currentItem: null,\r\n      mousePosition: {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n  }},\r\n  computed: {\r\n  },\r\n  mounted() { \r\n    setInterval(this.saveData, 50);\r\n    },\r\n  methods: {\r\n    changeBack() {\r\n      this.$el.querySelector(\".oval-cursor\").classList.remove('grow');\r\n      this.$el.querySelector(\".oval-cursor\").classList.remove('blank');\r\n      this.currentIndex = null;\r\n    },\r\n    saveData() {\r\n        if (this.currentIndex !== null) {\r\n          const currentElement = this.$el.querySelector(`span[data-index=\"${this.currentIndex}\"]`);\r\n          if (currentElement) {\r\n            const currentElementRect = currentElement.getBoundingClientRect();\r\n            $magpie.addTrialData({\r\n              Experiment: this.$el.querySelector(\".experiment_id\").value,\r\n              Condition: this.$el.querySelector(\".condition_id\").value,\r\n              ItemId: this.$el.querySelector(\".item_id\").value,\r\n              Index: this.currentIndex,\r\n              Word: currentElement.innerHTML,\r\n              mousePositionX: this.mousePosition.x,\r\n              mousePositionY: this.mousePosition.y,\r\n              wordPositionTop: currentElementRect.top,\r\n              wordPositionLeft: currentElementRect.left,\r\n              wordPositionBottom: currentElementRect.bottom,\r\n              wordPositionRight: currentElementRect.right\r\n              // wordPositionTop: currentElement.offsetTop,\r\n              // wordPositionLeft: currentElement.offsetLeft,\r\n              // wordPositionBottom: currentElement.offsetHeight + currentElement.offsetTop,\r\n              // wordPositionRight: currentElement.offsetWidth + currentElement.offsetLeft\r\n          });\r\n        } else {\r\n          $magpie.addTrialData({\r\n              Experiment: this.$el.querySelector(\".experiment_id\").value,\r\n              Condition: this.$el.querySelector(\".condition_id\").value,\r\n              ItemId: this.$el.querySelector(\".item_id\").value,\r\n              Index: this.currentIndex,\r\n              mousePositionX: this.mousePosition.x,\r\n              mousePositionY: this.mousePosition.y,\r\n          });\r\n          \r\n        }\r\n      }},\r\n    moveCursor(e) {\r\n      this.isCursorMoving = true;\r\n      this.$el.querySelector(\".oval-cursor\").classList.add('grow');\r\n      let x = e.clientX;\r\n      let y = e.clientY;\r\n      const elementAtCursor= document.elementFromPoint(x, y).closest('span');\r\n      if (elementAtCursor){\r\n        this.$el.querySelector(\".oval-cursor\").classList.remove('blank');\r\n        this.currentIndex = elementAtCursor.getAttribute('data-index');\r\n      } else {\r\n        this.$el.querySelector(\".oval-cursor\").classList.add('blank');\r\n        const elementAboveCursor = document.elementFromPoint(x, y-3).closest('span');\r\n        if (elementAboveCursor){\r\n          this.currentIndex = elementAboveCursor.getAttribute('data-index');\r\n        } else {\r\n          this.currentIndex = -1;\r\n        }\r\n      }\r\n      \r\n      this.$el.querySelector(\".oval-cursor\").style.left = `${x+12}px`;\r\n      this.$el.querySelector(\".oval-cursor\").style.top = `${y-6}px`;\r\n      this.mousePosition.x = e.clientX;\r\n      this.mousePosition.y = e.clientY;\r\n      // this.mousePosition.x = e.offsetX;\r\n      // this.mousePosition.y = e.offsetY;\r\n    },\r\n    toggleDivs() {\r\n    this.showFirstDiv = !this.showFirstDiv;\r\n    this.isCursorMoving = false;\r\n    },\r\n   //  async turnOnFullScreen() {\r\n//       if (!document.fullscreenElement) {\r\n//         try {\r\n//           await document.documentElement.requestFullscreen();\r\n//           return true;\r\n//         } catch (e) {\r\n//           return false;\r\n//         }\r\n//       }\r\n//       return true;\r\n//     },\r\n//     turnOffFullScreen() {\r\n//       document.exitFullscreen();\r\n//     },\r\n    getScreenDimensions() {\r\n      return {\r\n        window_inner_width: window.innerWidth,\r\n        window_inner_height: window.innerHeight\r\n      };\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n  .experiment {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .main_screen {\r\n    isolation: isolate;\r\n    position: relative;\r\n    width: 100%;\r\n    height: auto;\r\n    font-size: 18px;\r\n    line-height: 40px;\r\n  }\r\n  .debugResults{\r\n    width: 100%;\r\n  }\r\n  .readingText {\r\n    /* z-index: 1; */\r\n    position: absolute;\r\n    color: white;\r\n    text-align: left;\r\n    font-weight: 450;\r\n    cursor: pointer;\r\n    padding-top: 2%;\r\n    padding-bottom: 2%;\r\n    padding-left: 11%;\r\n    padding-right: 11%;\r\n  }\r\n  button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n  }\r\n  .oval-cursor {\r\n    position: fixed;\r\n    z-index: 2;\r\n    width: 1px;\r\n    height: 1px;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    mix-blend-mode: difference;\r\n    border-radius: 50%;\r\n    pointer-events: none;\r\n    transition: width 0.5s, height 0.5s;\r\n  } \r\n  .oval-cursor.grow.blank {\r\n    width: 80px;\r\n    height: 13px;\r\n  }\r\n  .oval-cursor.grow {\r\n    width: 102px;\r\n    height: 38px;\r\n    border-radius: 50%;\r\n    box-shadow: 30px 0 8px -4px rgba(255, 255, 255, 0.1), -30px 0 8px -4px rgba(255, 255, 255, 0.1);\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    background-blend-mode: screen;\r\n    pointer-events: none;\r\n    transition: width 0.5s, height 0.5s;\r\n    filter:blur(3px);\r\n  }\r\n  .oval-cursor.grow::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 70%;\r\n    height: 70%;\r\n    background-color: white;\r\n    mix-blend-mode: normal;\r\n    border-radius: 50%;\r\n}\r\n  .blurry-layer {\r\n    position: absolute;\r\n    pointer-events: none;\r\n    color: black;\r\n    text-align: left;\r\n    font-weight: 450;\r\n    padding-top: 2%;\r\n    padding-bottom: 2%;\r\n    padding-left: 11%;\r\n    padding-right: 11%;\r\n  }\r\n\r\n  * {\r\n    user-select: none; /* Standard syntax */\r\n    -webkit-user-select: none; /* Safari */\r\n    -moz-user-select: none; /* Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    }\r\n</style>"]}]}